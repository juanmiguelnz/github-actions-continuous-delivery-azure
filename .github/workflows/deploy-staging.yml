name: stage the app

on:
  pull_request:
    types: [labeled]

env:
  DOCKER_IMAGE_NAME: juanmiguelnz-azure-ttt
  IMAGE_REGISTRY_URL: docker.pkg.github.com
  AZURE_WEBAPP_NAME: juanmiguelnz-ttt-app

jobs:
  build:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'stage')
    steps:
      - name: checkout repo
        uses: actions/checkout@v1
        
      - name: npm install and build webpack
        run: |
          npm install
          npm run build
          
      - name: upload artifact
        uses: actions/upload-artifact@main
        with:
          name: webpack artifacts
          path: public/
          
  build-docker-image:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: checkout repo
        uses: actions/checkout@v1

      - name: download build artifact
        uses: actions/download-artifact@main
        with:
          name: webpack artifacts
          path: public

      - name: create image and store in packages
        uses: mattdavis0351/actions/docker-gpr@1.3.0
        with:
          repo-token: ${{secrets.GITHUB_TOKEN}}
          image-name: ${{env.DOCKER_IMAGE_NAME}}
          
  deploy-to-azure:
    runs-on: ubuntu-latest
    needs: build-docker-image
    steps:
      - name: log in to azure
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
      
      - name: log in to azure container registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{env.IMAGE_REGISTRY_URL}}
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
          
      - name: deploy web app container
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{env.AZURE_WEBAPP_NAME}}
          images: ${{env.IMAGE_REGISTRY_URL}}/${{github.repository}}/${{env.DOCKER_IMAGE_NAME}}:${{github.sha}}
          
      - name: azure logout
        run: az logout

          
